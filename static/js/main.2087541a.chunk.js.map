{"version":3,"sources":["App.tsx","reportWebVitals.js","index.js"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","InputContainer","_templateObject2","Label","label","_templateObject3","TextDiv","_templateObject4","Input","input","_templateObject5","Button","button","_templateObject6","Result","_templateObject7","Footer","footer","_templateObject8","Link","a","_templateObject9","Recipe","_templateObject10","App","_useState","useState","_useState2","_slicedToArray","temperature","setTemperature","_useState3","_useState4","grindSize","setGrindSize","_useState5","_useState6","taste","setTaste","_useState7","_useState8","suggestion","setSuggestion","_useState9","_useState10","profiles","setProfiles","_useState11","_useState12","coffeeName","setCoffeeName","useEffect","savedProfiles","JSON","parse","localStorage","getItem","React","createElement","htmlFor","id","type","value","onChange","e","target","min","max","step","parseInt","suggestionText","Fragment","onClick","newProfile","updatedProfiles","concat","_toConsumableArray","setItem","stringify","map","profile","index","key","href","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.2087541a.chunk.js","sourcesContent":["import React, { useState, useEffect, ChangeEvent } from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 2rem;\n  align-self: flex-start;\n  max-width: 50em; \n`;\n\nconst InputContainer = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  margin-bottom: 1rem;\n  width: 100%; /* add this line */\n  max-width: 25em; /* change from pixels to em */\n`;\n\nconst Label = styled.label`\n  margin-right: 1rem;\n  width: 5em; /* change from pixels to em */\n  text-align: right; /* add this line */\n`;\nconst TextDiv = styled.div`\n  flex-shrink: 1; /* add this line */\n`;\n\nconst Input = styled.input`\n  width: 20em; \n  margin-right: 1rem;\n`;\n\nconst Button = styled.button`\n  margin-top: 1rem;\n`;\n\nconst Result = styled.div`\n  margin-top: 1rem;\n`;\n\nconst Footer = styled.footer`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 2rem;\n  background-color: #f2f2f2;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Link = styled.a`\n  color: #333;\n  text-decoration: none;\n  font-weight: bold;\n`;\n\nconst Recipe = styled.div`\n  margin-top: 2rem;\n`;\n\ninterface CoffeeProfile {\n  temperature: number;\n  grindSize: number;\n  taste: string;\n  coffeeName?: string;\n}\n\nfunction App() {\n  const [temperature, setTemperature] = useState<number>(90);\n  const [grindSize, setGrindSize] = useState<number>(0);\n  const [taste, setTaste] = useState<string>('');\n  const [suggestion, setSuggestion] = useState<string>('');\n  const [profiles, setProfiles] = useState<CoffeeProfile[]>([]);\n  const [coffeeName, setCoffeeName] = useState<string>('');\n\n  useEffect(() => {\n    const savedProfiles = JSON.parse(localStorage.getItem('coffeeProfiles') || '[]') as CoffeeProfile[];\n    setProfiles(savedProfiles);\n  }, []);\n\n  const saveProfile = () => {\n    const newProfile: CoffeeProfile = { temperature, grindSize, taste, coffeeName };\n    const updatedProfiles = [...profiles, newProfile];\n    setProfiles(updatedProfiles);\n    localStorage.setItem('coffeeProfiles', JSON.stringify(updatedProfiles));\n    setCoffeeName(''); // clear input field after saving\n  };\n\n  const handleTasteChange = (e: ChangeEvent<HTMLSelectElement>) => {\n    setTaste(e.target.value);\n    let suggestionText = '';\n\n    if (e.target.value === 'bitter') {\n      suggestionText = 'To make it less bitter, try coarsening the grind size or lowering the temperature.';\n    } else if (e.target.value === 'sour') {\n      suggestionText = 'To make it less sour, try making the grind size finer or increasing the temperature.';\n    }\n\n    setSuggestion(suggestionText);\n  };\n\n  return (\n    <Container>\n      <h1>Pour Over Coffee Adjustments</h1>\n      <InputContainer>\n        <TextDiv>\n          <Label htmlFor=\"coffeeName\">Coffee Name:</Label>\n        </TextDiv>\n        <Input\n          id=\"coffeeName\"\n          type=\"text\"\n          value={coffeeName}\n          onChange={(e) => setCoffeeName(e.target.value)}\n        />\n      </InputContainer>\n      <InputContainer>\n        <TextDiv>\n          <Label htmlFor=\"temperature\">Temperature:</Label>\n        </TextDiv>\n\n        <input\n          id=\"temperature\"\n          type=\"range\"\n          min=\"70\"\n          max=\"100\"\n          step=\"1\"\n          value={temperature}\n          onChange={(e) => setTemperature(parseInt(e.target.value, 10))}\n        />\n        <span>{temperature}°C</span>\n      </InputContainer>\n      <InputContainer>\n        <TextDiv>\n          <Label htmlFor=\"grindSize\">Grind Size:</Label>\n        </TextDiv>\n        <input\n          id=\"grindSize\"\n          type=\"range\"\n          min=\"0\"\n          max=\"30\"\n          step=\"1\"\n          value={grindSize}\n          onChange={(e) => setGrindSize(parseInt(e.target.value, 10))}\n        />\n        <span>{grindSize}</span>\n      </InputContainer>\n      <h3>Taste Feedback</h3>\n      <select value={taste} onChange={handleTasteChange}>\n        <option value=\"\">--Select--</option>\n        <option value=\"good\">Good</option>\n        <option value=\"bitter\">Bitter</option>\n        <option value=\"sour\">Sour</option>\n      </select>\n      <Result>\n        {suggestion && (\n          <>\n            <h4>Suggestion       </h4>\n            <p>{suggestion}</p>\n          </>\n        )}\n      </Result>\n      <Button onClick={saveProfile}>Save Profile</Button>\n      <h2>Saved Profiles</h2>\n      <ul>\n        {profiles.map((profile, index) => (\n          <li key={index}>\n            {profile.coffeeName && profile.coffeeName + ', '} Temperature: {profile.temperature}°C, Grind Size: {profile.grindSize}, Taste: {profile.taste}\n          </li>\n        ))}\n      </ul>\n      <TextDiv>\n        <Recipe>\n          <h2>Recipe</h2>\n          <p>\n            Here's the recipe we're following for our pour over:\n          </p>\n          <ol>\n            <li>Grind 15g of coffee beans.</li>\n            <li>Add 30g of water to the grounds, making sure to evenly saturate all the grounds.</li>\n            <li>Allow the coffee to bloom for 30 seconds.</li>\n            <li>Slowly pour an additional 120g of water over the coffee, pouring in a circular motion.</li>\n            <li>Finish with a total of 250g of water.</li>\n          </ol>\n        </Recipe>\n      </TextDiv>\n      <Footer>\n        <p>\n          Like this app? You can support me by donating on <Link href=\"https://ko-fi.com/stupidfatcat\" target=\"_blank\">Ko-fi</Link>!\n        </p>\n      </Footer>\n    </Container>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}